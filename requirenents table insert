
-- Created by Vertabelo (http://vertabelo.com)
-- Last modification date: 2024-12-09 17:58:41.907

-- tables
-- Table: choices
CREATE TABLE choices (
    name varchar(30)  NOT NULL,
    CONSTRAINT choices_pk PRIMARY KEY (name)
);

-- Table: course_requirements
CREATE TABLE course_requirements (
    requirement_name varchar(30)  NOT NULL,
    course_name varchar(30)  NOT NULL,
    CONSTRAINT course_requirements_pk PRIMARY KEY (requirement_name,course_name)
);

-- Table: courses
CREATE TABLE courses (
    name varchar(30)  NOT NULL,
    departments_abbr varchar(50)  NOT NULL,
    number int  NOT NULL,
    description varchar(100)  NOT NULL,
    units int  NOT NULL,
    CONSTRAINT courses_uk_01 UNIQUE (departments_abbr, number) NOT DEFERRABLE  INITIALLY IMMEDIATE,
    CONSTRAINT courses_pk PRIMARY KEY (name)
);

-- Table: departments
CREATE TABLE departments (
    name varchar(50)  NOT NULL,
    abbreviation varchar(4)  NOT NULL,
    CONSTRAINT departments_uk_01 UNIQUE (abbreviation) NOT DEFERRABLE  INITIALLY IMMEDIATE,
    CONSTRAINT departments_pk PRIMARY KEY (name)
);

-- Table: majors
CREATE TABLE majors (
    name varchar(30)  NOT NULL,
    departments_name varchar(50)  NOT NULL,
    description varchar(100)  NOT NULL,
    CONSTRAINT majors_pk PRIMARY KEY (name)
);

-- Table: mandatories
CREATE TABLE mandatories (
    name varchar(30)  NOT NULL,
    CONSTRAINT mandatories_pk PRIMARY KEY (name)
);

-- Table: requirements
CREATE TABLE requirements (
    name varchar(30)  NOT NULL,
    majors_name varchar(30)  NOT NULL,
    description varchar(100)  NOT NULL,
    credits int  NOT NULL,
    CONSTRAINT requirements_pk PRIMARY KEY (name)
);

-- Table: totals
CREATE TABLE totals (
    name varchar(30)  NOT NULL,
    CONSTRAINT totals_pk PRIMARY KEY (name)
);

-- foreign keys
-- Reference: choices_requirements (table: choices)
ALTER TABLE choices ADD CONSTRAINT choices_requirements
    FOREIGN KEY (name)
    REFERENCES requirements (name)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: course_requirements_courses (table: course_requirements)
ALTER TABLE course_requirements ADD CONSTRAINT course_requirements_courses
    FOREIGN KEY (course_name)
    REFERENCES courses (name)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: course_requirements_requirements (table: course_requirements)
ALTER TABLE course_requirements ADD CONSTRAINT course_requirements_requirements
    FOREIGN KEY (requirement_name)
    REFERENCES requirements (name)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: courses_departments (table: courses)
ALTER TABLE courses ADD CONSTRAINT courses_departments
    FOREIGN KEY (departments_abbr)
    REFERENCES departments (abbreviation)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: majors_departments (table: majors)
ALTER TABLE majors ADD CONSTRAINT majors_departments
    FOREIGN KEY (departments_name)
    REFERENCES departments (name)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: mandatories_requirements (table: mandatories)
ALTER TABLE mandatories ADD CONSTRAINT mandatories_requirements
    FOREIGN KEY (name)
    REFERENCES requirements (name)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: requirements_majors (table: requirements)
ALTER TABLE requirements ADD CONSTRAINT requirements_majors
    FOREIGN KEY (majors_name)
    REFERENCES majors (name)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: totals_requirements (table: totals)
ALTER TABLE totals ADD CONSTRAINT totals_requirements
    FOREIGN KEY (name)
    REFERENCES requirements (name)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- End of file.


--/*Data for the table departments*/
insert into
departments(name, abbreviation) values

('Computer Engineering and Computer Science', 'CECS'),
('Mathematics and Statistics', 'MATH'),
('Physics and Astronomy','PHYS'),
('Chemistry and Biochemistry', 'CHEM'),
('Biological Sciences', 'BIO'),
('Engineering Technology', 'ENG'),
('Electrical Engineering', 'E E');
('Information Systems', 'I S')


--/*Data for the table majors*/
insert into
majors(name, deparmentName, description) values

('Computer Science, B.S', 'Computer Engineering', 
 'This degree is designed to prepare graduates for a 
 variety of professional careers in the computer field.
 The curriculum is designed to provide a balance between 
 the theoretical and practical aspects of computer science. 
 Extensive laboratory time is required for these courses, and 
 design and analysis experiences are emphasized.');
 
 
 --/*Data for the table courses*/
 insert into
 courses(name, departmentAbbreviation, number, description, units)values
 
('Introduction to Programming and Problem Solving ', 'CECS', '174', 
 'Introduction to basic concepts of computer science and fundamental
 techniques for solving problems using the Python programming language. 
 Variables, data types, conditional statements, loops and arrays. 
 Programming style. Applications to numerical and non-numerical problems.', '3'),
  
('Calculus I', 'MATH', '122', 'Limits. Continuous functions. Derivatives and 
 applications including graphing, related rates, and optimization. 
 Transcendental functions. L’Hospital’s Rule. Antiderivatives. 
 Definite integrals. Area under a curve.', '4'),
  
('Calculus II', 'MATH', '123', 'Applications of the integral. 
 Techniques of integration. Infinite series including convergence tests and Taylor series. 
 Parametric equations. Polar coordinates. Introduces differential equations.', '4'),
  
('Mechanics and Heat', 'PHYS', '151', 'Kinematics, Newton’s Laws, rotational motion, 
 conservation laws, mechanical waves, and laws of thermodynamics.', '4'),
 
('General Chemistry', 'CHEM', '111A', ' Introduction to principles of chemistry including 
 chemical reactions, stoichiometry, thermochemistry, electronic structure, bonding, and 
 properties of solids, liquids, gases, and solutions.', '5'),
 
--First-Time First-Year Students:
('Introduction to Programming and Problem Solving ', 'CECS', '174', 
 'Introduction to basic concepts of computer science and fundamental
 techniques for solving problems using the Python programming language. 
 Variables, data types, conditional statements, loops and arrays. 
 Programming style. Applications to numerical and non-numerical problems.', '3'),
 
('Calculus I', 'MATH', '122', 'Limits. Continuous functions. Derivatives and 
 applications including graphing, related rates, and optimization. 
 Transcendental functions. L’Hospital’s Rule. Antiderivatives. 
 Definite integrals. Area under a curve.', '4'),

--Transfer Students:
('Calculus II', 'MATH', '123', 'Applications of the integral. 
 Techniques of integration. Infinite series including convergence tests and Taylor series. 
 Parametric equations. Polar coordinates. Introduces differential equations.', '4'),

--Either:
('Mechanics and Heat', 'PHYS', '151', 'Kinematics, Newton’s Laws, rotational motion, 
 conservation laws, mechanical waves, and laws of thermodynamics.', '4'),

('General Chemistry', 'CHEM', '111A', ' Introduction to principles of chemistry including 
 chemical reactions, stoichiometry, thermochemistry, electronic structure, bonding, and 
 properties of solids, liquids, gases, and solutions.', '5'),


--Lower Division
('Introduction to Computer Engineering and Computer Science', 'CECS', '105', 
 'Introduction to the fields of computer engineering and computer science. 
 Current and future trends and challenges in various fields of computing. 
 Social, ethical and economical issues related to computing technology. 
 Exploration of career and professional development opportunities.', '1' ),
 
('Introduction to Programming and Problem Solving ', 'CECS', '174', 
 'Introduction to basic concepts of computer science and fundamental
 techniques for solving problems using the Python programming language. 
 Variables, data types, conditional statements, loops and arrays. 
 Programming style. Applications to numerical and non-numerical problems.', '3'),
 
('Digital Logic and Assembly Programming', 'CECS', '225', 'An introductory course 
 in digital logic and assembly programming covering number representation, digital logic, 
 Boolean algebra and logic gates, combinatorial buildingblocks, latches and flip-flops, 
 arithmetic circuits, memory system organization, machine and assembly language programming, 
 and MIPS architecture.', '3'),
 
('Discrete Structures with Computing Applications', 'CECS', '228', 
 'An introduction to discrete mathematics with applications towards computing. Topics
 include sets, functions, logic, relations, graphs, trees, recursion, combinatorics, 
 and mathematical reasoning.', '3'),

('Discrete Structures with Computing Applications II', 'CECS', '229', 
 'This is the second course in a two-course sequence in computing applications of 
 discrete structures. Topics include applications of computer arithmetic 
 and matrices in computer systems. Programming assignments in Python will be provided.', '3'),
 
('Data Structures', 'CECS', '274', 'Data Structures. Topics include lists, hash tables, 
 binary trees, balanced trees, heaps,', '3'),
 
('Object Oriented Application Development', 'CECS', '277', 'Object oriented programming 
 and design for large scale software. Class design, interfaces, inheritance, and 
 polymorphism. Robust programming with exceptions, streams, iterators, and testing.', '3'),
 
('Introduction to the Engineering Profession', 'ENGR', '101', 'Freshman orientation seminar 
 on careers in engineering. Speakers from various fields illustrate opportunities and challenges 
 in the engineering profession.', '1'),
 
('Academic Success Skills', 'ENGR', '102', 'Development of skills and identification 
 of strengths and weaknesses for success in a COE major.', '1'),
 
('Calculus I', 'MATH', '122', 'Limits. Continuous functions. Derivatives and 
 applications including graphing, related rates, and optimization. 
 Transcendental functions. L’Hospital’s Rule. Antiderivatives. 
 Definite integrals. Area under a curve.', '4'),
 
('Calculus II', 'MATH', '123', 'Applications of the integral. 
 Techniques of integration. Infinite series including convergence tests and Taylor series. 
 Parametric equations. Polar coordinates. Introduces differential equations.', '4'),
 
 --Approved Science Electives (minimum of 8 units)
('Mechanics and Heat', 'PHYS', '151', 'Kinematics, Newton’s Laws, rotational motion, 
 conservation laws, mechanical waves, and laws of thermodynamics.', '4'),

('General Chemistry', 'CHEM', '111A', ' Introduction to principles of chemistry including 
 chemical reactions, stoichiometry, thermochemistry, electronic structure, bonding, and 
 properties of solids, liquids, gases, and solutions.', '5'),
 
--Remaining units to be chosen from the following:
('General Biology', 'BIOL', '200', 'Brief survey of major areas of biology including 
 cell biology, genetics, evolution, phylogeny, plant and animal anatomy and physiology, 
 ecology, and behavior for non-science majors.', '4'),

('Human Biology', 'BIOL', '205', 'Brief survey of human biology focusing on anatomy, physiology, 
 and development of cells, tissues, organs, and organ systems; including molecular biology, 
 genetics, ecology,evolution, and diversity. Designed for non-science majors.', '4'),

('Human Physiology', 'BIOL', '207', 'General introduction to the functional integration of 
 human body systems. Designed for majors in biomedical engineering, physical education, 
 and the allied health fields.', '4'),
 
 --Upper Division:
('System Programming', 'CECS', '325', 'Development, debugging, and 
 deployment of systems-level software for experienced programmers. 
 Operating system abstractions for processes, memory management, file systems, and parallel programming. 
 Modern C++ programming in a Unix-based environment. ', '3'),
 
('Operating Systems', 'CECS', '326', 'The structure and functions of operating systems. 
 Interrupt handling, processes and interprocess communication, memory management, 
 resource scheduling, information sharing and protection. Project implementation in C/C++.', '3'),
 
('Introduction to Networks and Distributed Computing', 'CECS', '327', 
 'Introduction to Distributed Computing and Interprocess Communication. Networking Protocols. 
 Client Server Paradigm. Peer to Peer Networking. Sockets and the Socket API. Distributed Objects. 
 Coordination, Agreements and Distributed Transactions.', '3'),

('Algorithms', 'CECS', '328', 'Greedy algorithms, dynamic programming, divide and conquer, 
 network flow,approximation algorithms, NP-complete problems. Programming projects to exemplify 
 these concepts.', '3'),

('Concepts of Computer Science Theory', 'CECS', '329', 'Fundamental topics in theoretical computer science.
 Topics include regular languages, finite automata, context-free languages. Turing machine, 
 computability theory, computational complexity, NP-completeness.', '3'),

('Computer Architecture and Organization', 'CECS', '341', 'Basic computer architecture and organization,
 instruction set architecture, central processing unit, processor’s datapath, arithmetic and logic unit,
 processor performance, pipelined processors, memory systems, cache memory organization, virtual memory,
 I/O systems, processor parallelism, and multicore processor architectures. ', '3'),

('Principles of Programming Languages', 'CECS', '342', 'Fundamental topics in the design and 
 implementation of programming languages. Programing language paradigms. Comparison of languages 
 in type systems, data types, control flow, subroutines, concurrency, and exception handling.', '3'),

('Introduction to Software Engineering', 'CECS', '343', 'Principles of software engineering, UML,
 modeling large software systems, requirements elicitation, object oriented analysis and design using UML,
 introduction to design patterns, implementation of large systems, software testing, project management, 
 the software lifecycle.Semester long programming project.', '3'),

('Introduction to Computer Security Principles', 'CECS', '378', 'An introduction to the fundamentals 
 of cryptography and information and computer security. Basic concepts, theories and 
 protocols in computer security. Basic cryptography, software security, operating system security, 
 database security, network security, human factors, social engineering, digital forensics, 
 privacy and anonymity.', '3'),

('Computers, Ethics and Society', 'CECS', '350', 'Examination of the social impact of information 
 technologies. Topics include a survey of the technology (software, hardware and key applications), 
 ethical obligations of specialists, the computer in the workplace, shifts of power, privacy, 
 and legal issues related to computing.', '3'),
 
--How do we account for the string 341A in the catalog?

('Computer Science Senior Project I', 'CECS', '391', 'First course in a two-course capstone design sequence that 
 fulfills integrative learning. Design of a commercial grade software application including requirements analysis, 
 functional, architectural and detailed design, emphasizing written communication, 
 teamwork and the Object-Oriented Methodology.', '3'),

('Computer Science Senior Project I', 'CECS', '391', 'Second course in a two-course capstone design sequence that 
 fulfills integrative learning. Implementation, testing, packaging and deployment of the system designed in 
 CECS 491A emphasizing written communication, teamwork and the Object- Oriented Methodology', '3'),
 
--Take one course from the following:
('Scientific Research Communication', 'ENGR', '361', 'Introduction to technical writing for students pursuing 
 research careers. Accessing and using research literature. Writing technical and research reports for 
 various purposes and audiences. Oral presentation of research and scientific information. 
 Includes intensive writing.', '3'),

('Information and Communication Technology for Sustainability', 'ENGR', '390', 'Information and communication 
 technology and Sustainability. Concepts for understanding and analyzing the sustainability of 
 a given engineering context. Application domains relevant for sustainability engineering such as climate change, 
 smart systems, and gamification. Systems thinking approaches and development of feasible future scenarios.', '3'),
 
--Take one course from the following:
('Stochastic Computing', 'CECS', '381', 'Applications of probability and statistics to computing. 
 Topics include axioms of probability,random variables and their statistics, discrete and 
 continuous probability distributions, Chernoff bounds, randomized algorithms, Markov chains, 
 Monte Carlo simulation, regression techniques. Programming assignments provided.', '3'),

('Probability and Statistics with Applications to Computing', 'E E', '381', 
 'Applications of probability and statistics to computing. Topics include random variables and their statistics, 
 probability distributions, Markov chains, Bayesian networks, sampling techniques, hypothesis testing, 
 regression and analytic methods. Programming assignments using Python.', '3'),
 
--Take 18 units of electives:
--Take 12 units from one of the following focus areas:
--Take the below course:
('Database Fundamentals', 'CECS', '323', 'Techniques for representing data using modern database systems. 
 Designing schemas in relational, document, and other models of data storage. Data manipulation languages. 
 Database application programming.', '3'),

--Take the remaining 9 units from the following:
('443 - Software Project Management and Testing', 'CECS', '443', 'The concepts of software project management. 
 Metrics, teams, estimation and scheduling for software projects, risks. Software testing. Review techniques, 
 quality assurance, testing strategies for various application types. Unit level testing: black-box, glass-box, 
 code coverage, testing platforms. Integration testing. Regression testing.', '3'),

('User Interface Design', 'CECS', '448', 'Evaluation, design and programming of user interface systems. 
 Fundamentals of human cognition, system characteristics, and the interaction between humans and systems. 
 Usability methods and user/task-centered design. Tools for designing and building user interfaces, 
 with emphasis on rapid applications development.', '3'),

('Mobile Application Development', 'CECS', '453', 'Languages and application programming interfaces for 
 mobile device platforms. Development of thick and thin client applications for mobile devices.', '3'),

('Web Programming and Accessibility', 'CECS', '470', 'Introduction to World-Wide Web development. 
 Accessibility issues. Web architecture, standards, and programming, emphasizing XML technologies and 
 cascading style sheets. Visual design principles and information architecture. 
 Client-side and server-side programming and protocols. Development for adaptive technologies and 
 mobile devices.', '3'),

('Software Development with Frameworks', 'CECS', '475', 'Introduction to enterprise application development 
 utilizing a modern software framework. Topics include large-scale software design, framework components, 
 data management, events, extensibility, user interfaces, web services,
 and web applications. Includes programming projects.', '3'),

--Take the below course:
('Introduction to Computer Security', 'CECS', '478', 'Controlling the risk of computer security. 
 Security threats and vulnerabilities in the development and use of computer systems. 
 Tools and controls that can reduce or block these threats. Law, privacy and ethics.', '3'),
 
--Take the remaining 9 units from the following:
('Networks and Network Security', 'CECS', '303', 'An examination of common computer security threats; 
 fundamental techniques for implementing secure software systems and networks; practical experience in 
 attacking and defending networked systems.', '3'),

('Machine Learning', 'CECS', '456', 'An introduction to machine learning and its applications, 
 including supervised, unsupervised learning and deep learning. Main topics include regression, classification 
 and neural networks. Programming assignments.', '3'),

('Applied Machine Learning', 'CECS', '457', 'Fundamentals of machine learning with an emphasis on the process 
 of applying machine learning techniques to various real-world computing applications, including natural 
 language processing, text mining, cybersecurity, and computer vision.', '3'),

('Computer Network Interoperability', 'CECS', '474', 'Overview of computer network theory and practice from a 
 systems perspective. Topics include network infrastructure, local area network (LAN) protocols, 
 wide area network(WAN) protocols, switching technologies, Internet Protocol (IP), 
 Transmission Control Protocol (TCP), 
 network security, and network configuration, design, and performance.', '3'),

('Cybersecurity in Business', 'I S', '360', 'Foundation and business applications of cybersecurity. 
 Principles and methodologies of risk assessment and management. Assurance and internal control. 
 Security operations and administration. Introduction to cybersecurity attacks, threats and vulnerabilities. 
 Regulatory and organizational compliance. Individual project.', '3'),

--Take the below course:
('Machine Learning', 'CECS', '456', 'An introduction to machine learning and its applications, including 
 supervised, unsupervised learning and deep learning. Main topics include regression, classification 
 and neural networks. Programming assignments.', '3'),
 
--Take the remaining 9 units from the following:
('Dynamic Networks', 'CECS', '427', '', ''),

('Search Engine Technology', 'CECS', '429', 'Models, algorithms, and evaluation of the retrieval of 
 information from a collection of documents. Document preprocessing. Indexing and searching. 
 Retrieval evaluation. Search engines.', '3'),

('Data Visualization', 'CECS', '450', 'Introduction to various techniques in data visualization supporting the 
 analytical process of turning data into wisdom. Introduction to general concepts, principles, and 
 practices with specific visualization designs. Overview of analytical techniques, analytical interaction, 
 and navigation design. Programming assignments.', '3'),

('Artificial Intelligence', 'CECS', '451', 'Introduction to the history and implementation of artificial 
 intelligence agents. Topics include search, constraint satisfaction, game-playing, logical agents, 
 belief networks, optimal sequential decision systems. Project implementation.', '3'),

('Applied Machine Learning', 'CECS', '457', 'Fundamentals of machine learning with an emphasis on the process of 
 applying machine learning techniques to various real-world computing applications, 
 including natural language processing, text mining, cybersecurity, and computer vision.', '3'),
 
 --Take the remaining 6 units of upper division electives from the following:
('Networks and Network Security', 'CECS', '303', 'An examination of common computer security threats; 
 fundamental techniques for implementing secure software systems and networks; 
 practical experience in attacking and defending networked systems.', '3'),
 
('Database Fundamentals', 'CECS', '323', 'Techniques for representing data using modern database systems. 
 Designing schemas in relational, document, and other models of data storage. Data manipulation languages. 
 Database application programming.', '3'),
 
 ('Selected Topics in Computer Science', 'CECS', '406', 'Each offering is based upon an area of computer 
  science and technology in which recent advances have been made.', '3'),
 
 ('Theory of Computation', 'CECS', '419', 'Advanced topics in computability theory and computational 
  complexity theory. Topics include Turing Machines, coverage of the standard complexity classes P, NP, IP, 
  and PSPACE, hierarchy, decidability, and recognizability theorems. 
  Additional projects required for CECS 519.', '3'),
 
 ('Dynamic Networks', 'CECS', '427', 'Fundamental concepts in dynamic networks. Topics include graphs, 
  random graphs, social and large-scale networks, network information, network theory, metrics, network 
  algorithms and network models. Programming assignments will be provided.', '3'),
 
 ('Analysis of Algorithms', 'CECS', '428', 'Applications of standard combinatorial techniques to applied 
  programming problems. Rigorous analysis of correctness/complexity of algorithms. Advanced graph algorithms 
  are emphasized. Topics include shortest paths on graphs, sorting, string matching, union find problem, 
  divide-and-conquer technique, and weighted-edge problem.', '3'),
 
 ('Search Engine Technology', 'CECS', '429', 'Models, algorithms, and evaluation of the retrieval of information 
  from a collection of documents. Document preprocessing. Indexing and searching. Retrieval evaluation. 
  Search engines.', '3'),
 
 ('Software Project Management and Testing', 'CECS', '443', 'The concepts of software project management. 
  Metrics, teams, estimation and scheduling for software projects, risks. Software testing. Review techniques, 
  quality assurance, testing strategies for various application types. Unit level testing: black-box, glass-box, 
  451 code coverage, testing platforms. Integration testing. Regression testing.', '3'),
 
 ('Compiler Construction', 'CECS', '444', 'Syntax directed compiler study. Organization of a compiler and 
  overall design: parsing, semantic analysis, optimization and code generation.', '3'),
 
 ('User Interface Design', 'CECS', '448', 'Evaluation, design and programming of user interface systems. 
  Fundamentals of human cognition, system characteristics, and the interaction between humans and systems. 
  Usability methods and user/task-centered design. Tools for designing and building user interfaces, 
  with emphasis on rapid applications development.', '3'),
 
 ('Computer Graphics', 'CECS', '449', 'Introduction to the theory and practice of computer graphics, 
  Graphics systems, 2-D and 3-D modeling, transformations, viewing transformations, projections, 
  rendering techniques.', '3'),
 
 ('Data Visualization', 'CECS', '450', 'Introduction to various techniques in data visualization 
  supporting the analytical process of turning data into wisdom. Introduction to general concepts, principles, 
  and practices with specific visualization designs. Overview of analytical techniques, analytical interaction, 
  and navigation design. Programming assignments.', '3'),
 
 ('Artificial Intelligence', 'CECS', '451', 'Introduction to the history and implementation of 
  artificial intelligence agents. Topics include search, constraint satisfaction, game-playing, 
  logical agents, belief networks, optimal sequential decision systems. Project implementation.', '3'),
 
 ('Mobile Application Development', 'CECS', '453', 'Languages and application programming interfaces for 
  mobile device platforms. Development of thick and thin client applications for mobile devices.', '3'),
 
 ('Introduction to Game Programming', 'CECS', '455', 'Introduction to game programming and graphics. 
  “Slow” games. Realtime games with no adversary. Adversarial real-time games in 2-D.', '3'),
 
 ('Machine Learning', 'CECS', '456', 'An introduction to machine learning and its applications, 
  including supervised, unsupervised learning and deep learning. Main topics include regression, 
  classification and neural networks. Programming assignments.', '3'),
 
 ('Applied Machine Learning', 'CECS', '457', 'Fundamentals of machine learning with an emphasis on the 
  process of applying machine learning techniques to various real-world computing applications, 
  including natural language processing, text mining, cybersecurity, and computer vision.', '3'),
 
 ('Hardware/Software Co-design', 'CECS', '461', 'Introduction to top-down methods for hardware/software 
  system-on-chip co-design. Design flow - system specification, software implementation, hardware synthesis, 
  system design, and verification. Process optimization with various design decisions emphasized. 
  Projects/case studies using system-level design methods and tools.', '3'),
 
 ('Web Programming and Accessibility', 'CECS', '470', 'Introduction to World-Wide Web development. 
  Accessibility issues. Web architecture, standards, and programming, emphasizing XML technologies 
  and cascading style sheets. Visual design principles and information architecture. Client-side 
  and server-side programming and protocols. Development for adaptive technologies and mobile 
  devices.', '3'),
 
 ('Computer Network Interoperability', 'CECS', '474', 'Overview of computer network theory and practice from 
  a systems perspective. Topics include network infrastructure, local area network (LAN) protocols, 
  wide area network (WAN) protocols, switching technologies, Internet Protocol (IP), 
  Transmission Control Protocol (TCP), network security, and network configuration, design, and performance.', '3'),
 
 ('Software Development with Frameworks', 'CECS', '475', 'Introduction to enterprise application 
  development utilizing a modern software framework. Topics include large-scale software design, 
  framework components, data management, events, extensibility, user interfaces, web services, 
  and web applications. Includes programming projects.', '3'),
 
 ('Introduction to Computer Security', 'CECS', '478', 'Controlling the risk of computer security. 
  Security threats and vulnerabilities in the development and use of computer systems. 
  Tools and controls that can reduce or block these threats. Law, privacy and ethics.', '3'),
 
 ('Quantum Computation', 'CECS', '480', 'Fundamental topics in quantum computation. Topics include the matrix 
  formulation of quantum computation and information, Simon’s Algorithm, Deutsch’s algorithm, quantum circuits, 
  Shor’s factoring algorithm.', '3'),
 
 ('Computational Physiology', 'CECS', '495', 'This course will introduce students to cardiovascular (heart) and 
  cerebrovascular (brain) systems and signals, and the computational methods to analyze related signals, 
  and detect/predict a physiological event of interest.', '3'),

 ('Directed Studies', 'CECS', '497', 'Assigned study in topics in current computer literature or computer-related 
  projects with a final report.', '3'),
 
 ('Introduction to Numerical Analysis', 'MATH', '323', 'Introduction to Numerical Analysis', '4'),
 

 --/*Data for the table requirements*/
 insert into
 requirements(name, majorName, description, credits, parentRequirementName) values
 --requirements(majorName, requirementName, name, description, credits)values
 
--Requirements
('Computer Science', NULL, 'Bachelors Degree',
 'A minimum of 120 units is required for the Bachelor’s Degree.
 A grade of “C” or better must be achieved in all 
 of the courses required for the major.', 120 )

--Lower Division:
--Take all the following Courses:
('Computer Science', 'Bachelors Degree', 'Lower Division','Take the following lower division courses', 60, NULL)values

--My guess is to insert values for whatever is under lower division, but we have to insert what will connect list of courses within Lower Division to department:
insert
()

--Approved Science Electives(minimum of 8 units)
('Computer Scienc', 'Bachelors Degree', 'Lower Division', 'Take a minimums of 8 units of science-electives', 8)values

--Upper Division:   
('Computer Science', 'Bachelors Degree', 'Upper Division','Take the following upper division courses', 60)values
